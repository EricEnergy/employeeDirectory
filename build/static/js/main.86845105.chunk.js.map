{"version":3,"sources":["components/Jumbotron/index.js","components/Container/index.js","components/Row/index.js","components/Col/index.js","components/ColCopy/index.js","components/Button/index.js","components/SearchForm/useForm.js","components/SearchForm/index.js","components/functions/compare.js","components/functions/compareOccupation.js","components/TableHead/index.js","Pages/index.js","components/Navbar/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["Jumbotron","props","className","fluid","Container","Row","Col","size","split","map","join","Button","color","onClick","style","width","useForm","callback","useState","values","setValues","handleChange","event","persist","target","name","value","handleSubmit","preventDefault","SearchForm","console","log","onSubmit","htmlFor","firstName","onChange","type","lastName","Title","compare","a","b","nameA","toUpperCase","nameB","comparison","occupation","TableHead","scope","App","employeeName","setEmployeeName","employeeId","setEmployeeId","employeeOccupation","setEmployeeOccupation","employeeLocation","setEmployeeLocation","employeeSex","setEmployeeSex","setEmployeeInfo","o","key","id","location","sex","useEffect","Employees","ColCopy","e","sort","compareOccupation","filter","Navbar","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","exact","path","component","Index","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.86845105.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Jumbotron(props) {\n  return <div className={`jumbotron text-center ${props.fluid ? \"-fluid\" : \"\"}`} {...props} />;\n}\n\nexport default Jumbotron;\n","import React from \"react\";\n\nfunction Container(props) {\n  return <div className={`container${props.fluid ? \"-fluid\" : \"\"} `} {...props} />;\n}\n\nexport default Container;\n","import React from \"react\";\n\nfunction Row(props) {\n  return <div className={`row${props.fluid ? \"-fluid\" : \"\"} `} {...props} />;\n}\n\nexport default Row;\n","import React from \"react\";\n\nfunction Col(props) {\n  const size = props.size.split(\" \").map(size => \"col-\" + size).join(\" \");\n\n  return <div className={size + \" text-center bg-dark mr-1\" } {...props}  />;\n}\n\nexport default Col;\n","import React from \"react\";\n\nfunction Col(props) {\n  const size = props.size.split(\" \").map(size => \"col-\" + size).join(\" \");\n\n  return <div className={size + \" text-center bg-light \" } {...props} />;\n}\n\nexport default Col;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Button(props) {\nconst color = props.color.split(\" \").map(size => \" btn-\" + size).join(\" \");\n\n  return (\n    <button onClick={props.onClick} className={`btn  ${props.fluid ? \"-fluid\" : \"\"}` + color } style={{width:'25%'}} {...props} />\n  );\n}\n\nexport default Button;\n\n","import { useState } from 'react';\r\n\r\nconst useForm = (callback) => {\r\n\r\n  const [values, setValues] = useState({});\r\n\r\n  const handleSubmit = (event) => {\r\n    if (event) event.preventDefault();\r\n      callback();\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n    setValues(values => ({ ...values, [event.target.name]: event.target.value }));\r\n  };\r\n\r\n  return {\r\n    handleChange,\r\n    handleSubmit,\r\n    values,\r\n  }\r\n};\r\n\r\nexport default useForm;","import React from \"react\";\nimport \"./style.css\";\nimport useForm from \"./useForm\";\n\n\n// Using the datalist element we can create autofill suggestions based on the props.breeds array\n\nfunction SearchForm(props) {\n\n\n  const { values, handleChange, handleSubmit } = useForm(saveDAta);\n\n  function saveDAta() {\n    console.log(values);\n  }\n\n  return (\n    <form className=\"search\" onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label htmlFor=\"language\">First Name:</label>\n        <input\n          value={values.firstName}\n          onChange={handleChange}\n          name=\"firstName\"\n          type=\"text\"\n          className=\"form-control\"\n        />\n        <label htmlFor=\"language\">Last Name:</label>\n        <input\n          value={values.lastName}\n          onChange={handleChange}\n          name=\"lastName\"\n          type=\"text\"\n          className=\"form-control\"\n        />\n        <label htmlFor=\"language\">Title:</label>\n        <select\n          value={values.Title}\n          onChange={handleChange}\n          name=\"title\"\n          className=\"form-control\"\n        >  <option value=\"\"></option>\n          <option value=\"Software Developer\">Software Developer</option>\n          <option value=\"Technician\">Technician</option>\n          <option value=\"Salesperson\">Salesperson</option>\n          <option value=\"Accountant\">Accountant</option>\n          <option value=\"Manager\">Manager</option>\n          <option value=\"HR\">HR</option>\n        </select>\n          <input\n            name=\"gender\"\n            value=\"male\"\n            onChange={handleChange}\n            type=\"radio\"\n          />Male<br></br>\n          <input\n            name=\"gender\"\n            value=\"female\"\n            onChange={handleChange}\n            type=\"radio\"\n          />Female<br></br>\n          <button type=\"submit\"  className=\"btn btn-success\">\n            Search\n          </button>\n      </div>\n    </form>\n  );\n}\n// https://www.codementor.io/@blizzerand/building-forms-using-react-everything-you-need-to-know-iz3eyoq4y\nexport default SearchForm;\n","export default     function compare(a, b) {\r\n    const nameA = a.name.toUpperCase();\r\n    const nameB = b.name.toUpperCase();\r\n  \r\n    let comparison = 0;\r\n    if (nameA > nameB) {\r\n      comparison = 1;\r\n    } else if (nameA < nameB) {\r\n      comparison = -1;\r\n    }\r\n    return comparison;\r\n}","export default     function compare(a, b) {\r\n    const nameA = a.occupation.toUpperCase();\r\n    const nameB = b.occupation.toUpperCase();\r\n  \r\n    let comparison = 0;\r\n    if (nameA > nameB) {\r\n      comparison = 1;\r\n    } else if (nameA < nameB) {\r\n      comparison = -1;\r\n    }\r\n    return comparison;\r\n}","import React from \"react\";\r\n\r\nfunction TableHead() {\r\n  return  (\r\n    <thead>\r\n      <tr>\r\n        <th scope=\"col\">ID</th>\r\n        <th scope=\"col\">Name</th>\r\n        <th scope=\"col\">Occupation</th>\r\n        <th scope=\"col\">Location</th>\r\n        <th scope=\"col\">Gender</th>\r\n      </tr>\r\n    </thead>\r\n  );\r\n}\r\n\r\nexport default TableHead;","import React, { useState, useEffect } from \"react\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport Container from \"../components/Container\";\r\nimport Row from \"../components/Row\";\r\nimport Col from \"../components/Col\";\r\nimport ColCopy from \"../components/ColCopy\";\r\nimport Button from \"../components/Button\";\r\nimport SearchForm from \"../components/SearchForm\";\r\nimport Employees from \"../employees.json\"\r\nimport compare from \"../components/functions/compare\";\r\nimport compareOccupation from \"../components/functions/compareOccupation\";\r\nimport compareLocation from \"../components/functions/comparelocation\";\r\nimport TableHead from \"../components/TableHead/index\";\r\n\r\n\r\nexport default function App() {\r\n    const [employeeName, setEmployeeName] = useState('');\r\n    const [employeeId, setEmployeeId] = useState('');\r\n    const [employeeOccupation, setEmployeeOccupation] = useState('');\r\n    const [employeeLocation, setEmployeeLocation] = useState('');\r\n    const [employeeSex, setEmployeeSex] = useState('');\r\n\r\n    \r\n    function setEmployeeInfo(value) {\r\n        setEmployeeName(value.map(o => <p key={o.id}>{o.name}</p>))\r\n        setEmployeeId(value.map(o => <p key={o.id}>{o.id}</p>))\r\n        setEmployeeOccupation(value.map(o => <p key={o.id}>{o.occupation}</p>))\r\n        setEmployeeLocation(value.map(o => <p key={o.id}>{o.location}</p>))\r\n        setEmployeeSex(value.map(o => <p key={o.id}>{o.sex}</p>))\r\n    }\r\n\r\n    useEffect(() => {\r\n        setEmployeeInfo(Employees);\r\n      }, []);\r\n\r\n    function loadAllEmployee() {\r\n        setEmployeeInfo(Employees);\r\n    }\r\n\r\n    function filterByGender(value) {\r\n        let gender = Employees.filter(o => o.color === value);\r\n        setEmployeeInfo(gender);\r\n    }\r\n\r\n \r\n    function sortByLocation() {\r\n        let newListLocation = Employees.sort(compareLocation);\r\n        setEmployeeInfo(newListLocation);\r\n    }\r\n\r\n    function sortByName() {\r\n       let newListName = Employees.sort(compare);\r\n       setEmployeeInfo(newListName);\r\n    }\r\n\r\n\r\n    function sortByOccupation() {\r\n        let newListOccupation = Employees.sort(compareOccupation);\r\n        setEmployeeInfo(newListOccupation);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Jumbotron>\r\n                <h1>Employee Database</h1>\r\n            </Jumbotron>\r\n            <Container fluid=\"true\">\r\n                <Row className=\"row d-flex justify-content-between\">\r\n                    <ColCopy size=\"lg-3\"><h1 >Create Employee</h1>\r\n                        <SearchForm></SearchForm>\r\n                    </ColCopy>\r\n                    <Col size=\"lg-8\">\r\n                        <Row className=\"row bg-dark d-flex justify-content-between\">\r\n                            <Button color=\"primary\" fluid=\"true\" onClick={e => loadAllEmployee()}> Show All </Button>\r\n                            <Button color=\"danger\" fluid=\"true\" onClick={e => sortByName()}> Sort By Name </Button>\r\n                            <Button color=\"success\" fluid=\"true\" onClick={e => sortByOccupation()}> Sort By Occupation </Button>\r\n                            <Button color=\"warning\" fluid=\"true\" onClick={e => filterByGender()}> Sort By Location </Button>\r\n                            <table className=\"table table-dark table-bordered\">\r\n            <TableHead />\r\n            <tbody>\r\n                <tr>\r\n                    <th scope=\"col\" key={employeeId}>{employeeId}</th>\r\n                    <th scope=\"col\">{employeeName}</th>\r\n                    <th scope=\"col\">{employeeOccupation}</th>\r\n                    <th scope=\"col\">{employeeLocation}</th>\r\n                    <th scope=\"col\">{employeeSex}</th>\r\n                </tr>\r\n            </tbody>\r\n            </table>\r\n\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\n","import React from \"react\";\r\n\r\nfunction Navbar() {\r\n    return<nav className=\"navbar navbar-expand-lg navbar navbar-dark bg-dark\">\r\n    <a className=\"navbar-brand\" href=\"#\">Navbar</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n      <ul className=\"navbar-nav\">\r\n        <li className=\"nav-item active\">\r\n          <a className=\"nav-link\" href=\"/\">Home <span className=\"sr-only\">(current)</span></a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </nav>\r\n  };\r\n\r\nexport default Navbar;","import {BrowserRouter as Router, Route} from \"react-router-dom\"\nimport React from 'react';\nimport './App.css';\nimport Index from \"./Pages/index\";\nimport Navbar from \"./components/Navbar/Navbar\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n      <Navbar />\n      <Route exact path=\"/\" component={Index}/>\n      {/* <Route exact path=\"/ao\" component={AO} />\n      <Route path=\"/contact\" component={Contact} />\n      <Route path=\"/contact\" component={Contact} /> */}\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}